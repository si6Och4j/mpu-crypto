from b00_interface import eval_test
from t08_matrix import matrix

matrix_testcases = [
    [
        'Выпущенное слово и камень не имеют возврата.',
        '367 257 55 296 246 206 245 201 140 252 186 72 147 138 138 115 98 92 165 145 123 197 201 275 168 135 94 223 222 298 108 108 143 159 152 154 340 237 11 33 99',
        {'key_size': 3, 'key': '1 9 7 3 6 5 9 1 0'}
    ],
    [
        'Настоящий стандарт определяет алгоритмы базовых блочных шифров, которые применяются в криптографических методах обработки и защиты информации, в том числе для обеспечения конфиденциальности, аутентичности и целостности информации при её передаче, обработке и хранении в автоматизированных системах. Определённые в настоящем стандарте алгоритмы криптографического преобразования предназначены для аппаратной или программной реализации, удовлетворяют современным криптографическим требованиям и по своим возможностям не накладывают ограничений на степень секретности защищаемой информации. Стандарт рекомендуется использовать при создании, эксплуатации и модернизации систем обработки информации различного назначения. Термины, определения и обозначения. П р и м е ч а н и е, В настоящем стандарте в целях сохранения терминологической преемственности по отношению к опубликованным научно-техническим изданиям применяется термин шифрование, объединяющий операции, определённые терминами зашифрование и расшифрование. Конкретное значение термина шифрование определяется в зависимости от контекста упоминания.',
        '149 138 127 378 307 186 177 182 243 196 173 181 66 77 131 293 240 172 211 180 161 143 111 51 219 227 294 137 95 21 231 192 152 332 275 184 67 52 19 238 203 138 124 138 200 329 259 159 401 341 274 317 238 102 98 103 138 264 217 163 291 234 154 311 249 181 232 195 161 165 145 123 444 377 319 327 261 194 227 180 116 292 237 163 164 119 53 270 237 198 245 181 72 298 224 103 282 207 73 168 131 46 152 142 137 124 90 11 181 168 182 88 80 89 240 227 243 207 208 261 275 238 204 183 160 118 146 121 90 208 177 163 245 212 186 231 216 225 101 97 114 405 303 140 182 132 24 238 204 150 195 147 68 236 237 299 266 213 147 157 121 51 111 128 216 371 280 137 310 248 153 193 155 89 168 163 172 171 163 177 268 231 180 275 222 141 163 156 180 161 165 213 310 248 153 275 222 141 163 156 180 308 243 147 141 134 166 167 168 216 232 195 161 172 134 60 201 150 71 182 141 46 190 146 62 168 157 186 40 67 154 263 214 154 241 182 63 124 127 154 195 147 68 43 50 84 279 198 46 155 140 118 144 120 89 173 156 168 225 157 23 352 306 274 304 230 99 130 101 67 361 300 217 258 203 114 106 112 159 156 120 66 336 266 140 131 106 57 296 206 27 485 367 167 249 186 67 126 133 172 133 106 46 80 98 177 153 135 112 231 200 162 342 262 145 210 185 162 182 167 186 173 162 154 267 201 105 222 195 173 251 182 51 176 162 159 162 113 35 164 129 87 190 132 23 295 277 304 149 118 59 171 121 17 259 177 33 301 235 154 307 233 140 167 149 160 159 152 154 219 182 141 180 144 93 274 225 161 164 119 53 228 187 130 224 190 145 99 84 55 88 80 89 167 168 216 285 215 88 170 165 185 153 111 39 151 150 174 522 398 185 286 240 189 198 141 44 165 145 123 357 275 154 227 180 116 292 237 163 164 119 53 270 237 198 245 181 72 259 200 94 85 97 159 49 68 138 319 256 135 206 173 126 198 168 153 187 164 144 194 139 42 197 164 132 275 222 141 398 314 203 166 148 132 184 129 20 242 173 14 229 170 28 182 167 186 124 127 154 267 201 105 165 146 135 149 138 127 185 173 177 335 247 68 149 145 168 204 182 159 275 222 141 156 151 180 298 204 35 77 114 235 218 179 132 282 216 95 259 212 152 271 186 32 348 261 100 306 236 117 162 112 23 287 200 26 148 142 159 174 153 148 199 172 131 303 222 73 239 240 297 235 198 159 206 210 269 145 110 28 292 268 277 276 210 99 60 59 77 158 141 135 285 215 88 255 246 281 264 220 156 179 122 28 167 168 216 231 180 94 178 136 51 151 136 135 271 186 32 234 180 99 231 198 181 162 139 132 40 67 154 263 214 154 188 151 90 275 238 204 183 160 118 209 166 90 157 111 17 323 241 105 156 144 139 79 88 127 191 168 127 195 147 68 371 330 307 224 177 118 197 174 166 322 250 154 292 237 163 211 180 161 143 111 51 195 147 68 218 225 297 193 136 33 191 168 127 195 147 68 371 330 307 274 214 115 168 135 94 131 148 217 119 103 87 208 177 163 149 138 127 378 307 186 171 179 240 196 173 181 66 77 131 230 195 172 252 177 50 454 338 140 307 254 177 124 127 154 195 147 68 245 240 307 197 174 166 233 192 141 114 114 139 204 198 222 216 173 114 211 180 161 249 186 67 88 105 174 245 201 140 252 213 181 256 213 159 250 216 185 177 181 231 365 268 112 299 241 151 173 123 30 167 138 114 225 157 23 243 232 265 349 243 29 282 227 141 204 159 98 227 203 177 263 216 135 245 181 72 189 150 94 60 59 77 319 256 135 276 220 133 168 135 94 344 264 158 405 325 189 192 178 177 192 163 126 253 234 234 173 156 168 190 132 23 190 146 62 168 157 186 116 142 249 359 271 95 328 294 305 257 200 105 166 125 71 167 168 216 285 215 88 278 226 151 93 78 59 164 142 114 308 240 154 192 178 177 192 163 126 181 126 22 192 155 73 317 238 102 49 68 138 137 126 135 169 134 98 306 249 187 279 240 206 110 85 28 196 158 87 200 193 227 218 184 149 204 182 159 191 162 141 141 113 86 176 178 222 196 158 87 250 185 71 142 116 95 253 234 234 173 156 168 190 132 23 253 188 69 106 112 159 338 250 66 303 222 73 115 154 291 91 66 12 190 173 171 310 248 153 277 212 96 244 193 114 150 148 177 196 173 181 269 231 196 192 163 126 190 132 23 371 330 307 11 33 99',
        {'key_size': 3, 'key': '1 9 7 3 6 5 9 1 0'}
    ]
]

if __name__ == '__main__':
    eval_test(matrix, matrix_testcases)
